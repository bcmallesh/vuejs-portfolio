{"remainingRequest":"D:\\vuejs\\workspace\\09062020\\portfolioui\\node_modules\\babel-loader\\lib\\index.js!D:\\vuejs\\workspace\\09062020\\portfolioui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vuejs\\workspace\\09062020\\portfolioui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vuejs\\workspace\\09062020\\portfolioui\\src\\components\\CreateProjectInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vuejs\\workspace\\09062020\\portfolioui\\src\\components\\CreateProjectInfo.vue","mtime":1591670735004},{"path":"D:\\vuejs\\workspace\\09062020\\portfolioui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591670532187},{"path":"D:\\vuejs\\workspace\\09062020\\portfolioui\\node_modules\\babel-loader\\lib\\index.js","mtime":1591670526439},{"path":"D:\\vuejs\\workspace\\09062020\\portfolioui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591670532187},{"path":"D:\\vuejs\\workspace\\09062020\\portfolioui\\node_modules\\vue-loader\\lib\\index.js","mtime":1591670721635}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Menu from \"./Menu\";\nimport ProjectInfoDataService from \"../service/ProjectInfoDataService\";\nimport ProjectDataService from \"../service/ProjectDataService\";\nimport AuthenticationService from \"../service/AuthenticationService\";\nimport Notification from './notifications.vue';\nimport PictureInput from 'vue-picture-input';\nexport default {\n  name: \"create-project-info\",\n  components: {\n    Menu: Menu,\n    'notification': Notification,\n    PictureInput: PictureInput\n  },\n  data: function data() {\n    return {\n      projectinfo: {},\n      notifications: [],\n      isAuthenticated: AuthenticationService.isUserLoggedIn(),\n      industries: this.retrieveLookupData(),\n      types: this.retrieveLookupData(),\n      works: this.retrieveLookupData(),\n      file: \"\",\n      projects: this.retrieveProjects()\n    };\n  },\n  methods: {\n    onSelect: function onSelect() {\n      var file = this.$refs.pictureInput.file;\n      this.file = file;\n    },\n    onRemoved: function onRemoved() {\n      this.image = '';\n    },\n    retrieveProjects: function retrieveProjects() {\n      var _this = this;\n\n      ProjectDataService.getAll().then(function (response) {\n        _this.projects = response.data;\n        console.log(\"projects===>\" + _this.projects);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    retrieveLookupData: function retrieveLookupData() {\n      var _this2 = this;\n\n      ProjectInfoDataService.getLookupData().then(function (response) {\n        _this2.industries = response.data.industryLookupData;\n        _this2.works = response.data.workLookupData;\n        _this2.types = response.data.typeLookupData;\n        console.log(\"industry===>\" + _this2.industries);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    addProjectInfo: function addProjectInfo() {\n      var _this3 = this;\n\n      var formData = new FormData();\n      /*\n          Add the form data we need to submit\n      */\n\n      formData.append('file', this.file);\n      formData.append('projectinfo', this.projectinfo);\n      ProjectInfoDataService.create(this.file, this.projectinfo).then(function (response) {\n        _this3.notifications.push({\n          type: 'success',\n          message: 'Project Info created successfully'\n        });\n      }, function (response) {\n        _this3.notifications.push({\n          type: 'error',\n          message: 'Project Info not created'\n        });\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  }\n};",{"version":3,"sources":["CreateProjectInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n<section>\n<Menu/>\n    <div id=\"create-project\">\n        <h1>Create Project Info</h1>\n\n        <p><router-link v-if=\"isAuthenticated\" class=\"btn btn-primary\" to=\"/projectsinfo\">Back to Projects Info</router-link>\n\n        <notification v-bind:notifications=\"notifications\"></notification>\n\n        <form v-on:submit.prevent=\"addProjectInfo\" enctype=\"multipart/form-data\">\n\n            \n             <div class=\"form-group\">\n                <label name=\"project_description\">File Upload</label>\n           \n          <picture-input\n  ref=\"pictureInput\"\n  @change=\"onSelect\"\n  @remove=\"onRemoved\"\n  :width=\"200\"\n  :removable=\"true\"\n  removeButtonClass=\"ui red button\"\n  :height=\"200\"\n  multiple\n  accept=\"image/jpeg, image/png, image/gif\"\n  buttonClass=\"ui button primary\"\n  :customStrings=\"{\n  upload: '<h1>Upload it!</h1>',\n  drag: 'Drag and drop your image here'}\">\n\n</picture-input>\n\n            </div>\n \n             <div class=\"form-group\">\n                <label name=\"project_description\">Image Description</label>\n                <input type=\"text\" class=\"form-control\" v-model=\"projectinfo.description\" id=\"project_description\" required>\n            </div>\n\n\n              <div class=\"form-group\">\n                <label name=\"project_name\">Project Name</label>\n                \n            <select  v-model=\"projectinfo.project\" id=\"projectNameList\" class=\"form-control\" required>\n        <option v-for=\"(project, index) in projects\" :key=\"index\" v-bind:value=\"project.id\">\n            {{project.name}}\n        </option>\n    </select>  \n            </div>\n\n              <div class=\"form-group\">\n                <label name=\"project_industry\">Industry</label>\n                \n            <select  v-model=\"projectinfo.industry\" id=\"industryList\" class=\"form-control\" required>\n        <option v-for=\"(industry, index) in industries\" :key=\"index\" v-bind:value=\"industry.key\">\n            {{industry.value}}\n        </option>\n    </select>  \n            </div>\n\n             <div class=\"form-group\">\n                <label name=\"project_type\">Type</label>\n                \n            <select  v-model=\"projectinfo.type\" id=\"typeList\" class=\"form-control\" required>\n        <option v-for=\"(type, index) in types\" :key=\"index\" v-bind:value=\"type.key\">\n            {{type.value}}\n        </option>\n    </select>  \n            </div>\n\n <div class=\"form-group\">\n                <label name=\"project_work\">Work Type</label>\n                \n            <select  v-model=\"projectinfo.work\" id=\"workList\" class=\"form-control\" required>\n        <option v-for=\"(work, index) in works\" :key=\"index\" v-bind:value=\"work.key\">\n            {{work.value}}\n        </option>\n    </select>  \n            </div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-primary\">Create</button>\n            </div>\n        </form>\n    </div>\n          </section>\n</template>\n\n<script>\n    import Menu from \"./Menu\";\nimport ProjectInfoDataService from \"../service/ProjectInfoDataService\";\nimport ProjectDataService from \"../service/ProjectDataService\";\n\nimport AuthenticationService from \"../service/AuthenticationService\";\nimport Notification from './notifications.vue';\nimport PictureInput from 'vue-picture-input'\n    export default{\n         name: \"create-project-info\",\n         \n  components: {\n    Menu,\n    'notification' : Notification,\n    PictureInput\n\n  },\n        data(){\n            return{\n                projectinfo:{},\n                notifications:[],\n                isAuthenticated: AuthenticationService.isUserLoggedIn(),\n\n                industries: this.retrieveLookupData(),\n                types: this.retrieveLookupData(),\n                works: this.retrieveLookupData(),\n                file:\"\",\n                projects: this.retrieveProjects(),\n            }\n        },\n\n        methods: {\nonSelect(){\nconst file=this.$refs.pictureInput.file;\n\nthis.file=file;\n},\nonRemoved() {\n    this.image = '';\n  },\nretrieveProjects() {\n      ProjectDataService.getAll()\n        .then(response => {\n          this.projects = response.data;\n          console.log(\"projects===>\"+this.projects);\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n\nretrieveLookupData() {\n      ProjectInfoDataService.getLookupData()\n        .then(response => {\n          this.industries = response.data.industryLookupData;\n          this.works = response.data.workLookupData;\n          this.types = response.data.typeLookupData;\n\n          console.log(\"industry===>\"+this.industries);\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n            addProjectInfo: function()\n            {\n                let formData = new FormData();\n\n            /*\n                Add the form data we need to submit\n            */\n            formData.append('file', this.file);\n            formData.append('projectinfo', this.projectinfo);\n\n                \n\n      ProjectInfoDataService.create(this.file, this.projectinfo)\n        .then(response => {\n         this.notifications.push({\n                        type: 'success',\n                        message: 'Project Info created successfully'\n                    });\n        }, (response) => {\n                    this.notifications.push({\n                        type: 'error',\n                        message: 'Project Info not created'\n                    });\n                })\n        .catch(e => {\n          console.log(e);\n        });\n\n    },\n            \n        }\n\n       \n    }\n</script>\n"],"sourceRoot":"src/components"}]}