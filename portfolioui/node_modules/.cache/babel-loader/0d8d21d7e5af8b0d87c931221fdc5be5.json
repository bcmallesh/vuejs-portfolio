{"remainingRequest":"D:\\vuejs\\portfolioui\\node_modules\\babel-loader\\lib\\index.js!D:\\vuejs\\portfolioui\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\vuejs\\portfolioui\\src\\routes.js","dependencies":[{"path":"D:\\vuejs\\portfolioui\\src\\routes.js","mtime":1578128221000},{"path":"D:\\vuejs\\portfolioui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vuejs\\portfolioui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vuejs\\portfolioui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from \"vue\";\nimport Router from \"vue-router\";\nimport AuthenticationService from \"./service/AuthenticationService\";\nVue.use(Router);\nvar router = new Router({\n  mode: 'history',\n  // Use browser history\n  routes: [{\n    path: \"/\",\n    name: \"Login\",\n    component: function component() {\n      return import(\"./components/Login\");\n    }\n  }, {\n    path: \"/login\",\n    name: \"Login\",\n    component: function component() {\n      return import(\"./components/Login\");\n    }\n  }, {\n    path: \"/courses\",\n    name: \"Courses\",\n    component: function component() {\n      return import(\"./components/Courses\");\n    },\n    beforeEnter: function beforeEnter(to, from, next) {\n      if (AuthenticationService.isUserLoggedIn()) {\n        next();\n      } else {\n        next({\n          path: '/login'\n        });\n      }\n    }\n  }, {\n    path: \"/logout\",\n    name: \"Logout\",\n    component: function component() {\n      return import(\"./components/Logout\");\n    },\n    beforeEnter: function beforeEnter(to, from, next) {\n      if (AuthenticationService.isUserLoggedIn()) {\n        AuthenticationService.logout();\n      }\n\n      next();\n    }\n  }]\n});\nexport default router;",{"version":3,"sources":["D:\\vuejs\\portfolioui\\src\\routes.js"],"names":["Vue","Router","AuthenticationService","use","router","mode","routes","path","name","component","beforeEnter","to","from","next","isUserLoggedIn","logout"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,qBAAP,MAAkC,iCAAlC;AAEAF,GAAG,CAACG,GAAJ,CAAQF,MAAR;AAEA,IAAMG,MAAM,GAAG,IAAIH,MAAJ,CAAW;AACtBI,EAAAA,IAAI,EAAE,SADgB;AACL;AACjBC,EAAAA,MAAM,EAAE,CACJ;AACIC,IAAAA,IAAI,EAAE,GADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,SAAS,EAAE;AAAA,aAAM,OAAO,oBAAP,CAAN;AAAA;AAHf,GADI,EAMJ;AACIF,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,SAAS,EAAE;AAAA,aAAM,OAAO,oBAAP,CAAN;AAAA;AAHf,GANI,EAWJ;AACIF,IAAAA,IAAI,EAAE,UADV;AAEIC,IAAAA,IAAI,EAAE,SAFV;AAGIC,IAAAA,SAAS,EAAE;AAAA,aAAM,OAAO,sBAAP,CAAN;AAAA,KAHf;AAIIC,IAAAA,WAAW,EAAE,qBAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AAC7B,UAAIX,qBAAqB,CAACY,cAAtB,EAAJ,EAA4C;AACxCD,QAAAA,IAAI;AACP,OAFD,MAEO;AACHA,QAAAA,IAAI,CAAC;AAAEN,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAJ;AACH;AACJ;AAVL,GAXI,EAuBJ;AACIA,IAAAA,IAAI,EAAE,SADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,SAAS,EAAE;AAAA,aAAM,OAAO,qBAAP,CAAN;AAAA,KAHf;AAIIC,IAAAA,WAAW,EAAE,qBAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AAC7B,UAAIX,qBAAqB,CAACY,cAAtB,EAAJ,EAA4C;AACxCZ,QAAAA,qBAAqB,CAACa,MAAtB;AACH;;AACDF,MAAAA,IAAI;AACP;AATL,GAvBI;AAFc,CAAX,CAAf;AAwCA,eAAeT,MAAf","sourcesContent":["import Vue from \"vue\";\nimport Router from \"vue-router\";\nimport AuthenticationService from \"./service/AuthenticationService\";\n\nVue.use(Router);\n\nconst router = new Router({\n    mode: 'history', // Use browser history\n    routes: [\n        {\n            path: \"/\",\n            name: \"Login\",\n            component: () => import(\"./components/Login\"),\n        },\n        {\n            path: \"/login\",\n            name: \"Login\",\n            component: () => import(\"./components/Login\"),\n        },\n        {\n            path: \"/courses\",\n            name: \"Courses\",\n            component: () => import(\"./components/Courses\"),\n            beforeEnter: (to, from, next) => {\n                if (AuthenticationService.isUserLoggedIn()) {\n                    next()\n                } else {\n                    next({ path: '/login'})\n                }\n            }\n        },\n        {\n            path: \"/logout\",\n            name: \"Logout\",\n            component: () => import(\"./components/Logout\"),\n            beforeEnter: (to, from, next) => {\n                if (AuthenticationService.isUserLoggedIn()) {\n                    AuthenticationService.logout();\n                }\n                next();\n            },\n\n        },\n    ]\n});\n\nexport default router;"]}]}