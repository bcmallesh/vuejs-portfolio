{"remainingRequest":"D:\\vuejs\\frontend-spring-boot-vuejs-jwt-auth-login-logout\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vuejs\\frontend-spring-boot-vuejs-jwt-auth-login-logout\\src\\components\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vuejs\\frontend-spring-boot-vuejs-jwt-auth-login-logout\\src\\components\\Login.vue","mtime":1578128221000},{"path":"D:\\vuejs\\frontend-spring-boot-vuejs-jwt-auth-login-logout\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vuejs\\frontend-spring-boot-vuejs-jwt-auth-login-logout\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vuejs\\frontend-spring-boot-vuejs-jwt-auth-login-logout\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vuejs\\frontend-spring-boot-vuejs-jwt-auth-login-logout\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Menu from \"./Menu\";\nimport AuthenticationService from \"../service/AuthenticationService\";\n\nexport default {\n  name: \"Login\",\n  components: {\n    Menu\n  },\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    };\n  },\n  methods: {\n    loginClicked() {\n      AuthenticationService.executeJwtAuthenticationService(\n        this.username,\n        this.password\n      )\n        .then(response => {\n          AuthenticationService.registerSuccessfulLoginForJwt(\n            this.username,\n            response.data.token\n          );\n          this.$router.push(\"/courses\");\n        })\n        .catch(() => {\n          this.hasLoginFailed = true;\n          this.showSuccessMessage = false;\n        });\n\n      // AuthenticationService.executeBasicAuthenticationService(\n      //   this.username,\n      //   this.password\n      // )\n      //   .then(() => {\n      //     AuthenticationService.registerSuccessfulLogin(\n      //       this.username,\n      //       this.password\n      //     );\n      //     this.showSuccessMessage = true;\n      //     this.$router.push(\"/courses\");\n      //   })\n      //   .catch(() => {\n      //     this.hasLoginFailed = true;\n      //     this.showSuccessMessage = false;\n      //   });\n    }\n  }\n};\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <section>\n    <Menu/>\n    <h1>Login</h1>\n    <div class=\"container\">\n      <div v-if=\"hasLoginFailed\" class=\"alert alert-warning\">Invalid Credentials</div>\n      <div v-if=\"showSuccessMessage\" class=\"alert\">Login Sucessful</div>User Name:\n      <input type=\"text\" name=\"username\" v-model=\"username\">\n      Password:\n      <input type=\"password\" name=\"password\" v-model=\"password\">\n      <button class=\"btn btn-success\" v-on:click=\"loginClicked\">Login</button>\n    </div>\n  </section>\n</template>\n<script>\nimport Menu from \"./Menu\";\nimport AuthenticationService from \"../service/AuthenticationService\";\n\nexport default {\n  name: \"Login\",\n  components: {\n    Menu\n  },\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    };\n  },\n  methods: {\n    loginClicked() {\n      AuthenticationService.executeJwtAuthenticationService(\n        this.username,\n        this.password\n      )\n        .then(response => {\n          AuthenticationService.registerSuccessfulLoginForJwt(\n            this.username,\n            response.data.token\n          );\n          this.$router.push(\"/courses\");\n        })\n        .catch(() => {\n          this.hasLoginFailed = true;\n          this.showSuccessMessage = false;\n        });\n\n      // AuthenticationService.executeBasicAuthenticationService(\n      //   this.username,\n      //   this.password\n      // )\n      //   .then(() => {\n      //     AuthenticationService.registerSuccessfulLogin(\n      //       this.username,\n      //       this.password\n      //     );\n      //     this.showSuccessMessage = true;\n      //     this.$router.push(\"/courses\");\n      //   })\n      //   .catch(() => {\n      //     this.hasLoginFailed = true;\n      //     this.showSuccessMessage = false;\n      //   });\n    }\n  }\n};\n</script>\n"]}]}