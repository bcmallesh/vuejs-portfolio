{"remainingRequest":"D:\\vuejs\\workspace\\05062020\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vuejs\\workspace\\05062020\\src\\components\\CreateProjectInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vuejs\\workspace\\05062020\\src\\components\\CreateProjectInfo.vue","mtime":1591360659782},{"path":"D:\\vuejs\\workspace\\05062020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591278153457},{"path":"D:\\vuejs\\workspace\\05062020\\node_modules\\babel-loader\\lib\\index.js","mtime":1591278138251},{"path":"D:\\vuejs\\workspace\\05062020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591278153457},{"path":"D:\\vuejs\\workspace\\05062020\\node_modules\\vue-loader\\lib\\index.js","mtime":1591278648347}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import Menu from \"./Menu\";\nimport ProjectInfoDataService from \"../service/ProjectInfoDataService\";\nimport ProjectDataService from \"../service/ProjectDataService\";\n\nimport AuthenticationService from \"../service/AuthenticationService\";\nimport Notification from './notifications.vue';\nimport PictureInput from 'vue-picture-input'\n    export default{\n         name: \"create-project-info\",\n         \n  components: {\n    Menu,\n    'notification' : Notification,\n    PictureInput\n\n  },\n        data(){\n            return{\n                projectinfo:{},\n                notifications:[],\n                isAuthenticated: AuthenticationService.isUserLoggedIn(),\n\n                industries: this.retrieveLookupData(),\n                types: this.retrieveLookupData(),\n                works: this.retrieveLookupData(),\n                file:\"\",\n                projects: this.retrieveProjects(),\n            }\n        },\n\n        methods: {\nonSelect(){\nconst file=this.$refs.pictureInput.file;\n\nthis.file=file;\n},\nonRemoved() {\n    this.image = '';\n  },\nretrieveProjects() {\n      ProjectDataService.getAll()\n        .then(response => {\n          this.projects = response.data;\n          console.log(\"projects===>\"+this.projects);\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n\nretrieveLookupData() {\n      ProjectInfoDataService.getLookupData()\n        .then(response => {\n          this.industries = response.data.industryLookupData;\n          this.works = response.data.workLookupData;\n          this.types = response.data.typeLookupData;\n\n          console.log(\"industry===>\"+this.industries);\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n            addProjectInfo: function()\n            {\n                let formData = new FormData();\n\n            /*\n                Add the form data we need to submit\n            */\n            formData.append('file', this.file);\n            formData.append('projectinfo', this.projectinfo);\n\n                \n\n      ProjectInfoDataService.create(this.file, this.projectinfo)\n        .then(response => {\n         this.notifications.push({\n                        type: 'success',\n                        message: 'Project Info created successfully'\n                    });\n        }, (response) => {\n                    this.notifications.push({\n                        type: 'error',\n                        message: 'Project Info not created'\n                    });\n                })\n        .catch(e => {\n          console.log(e);\n        });\n\n    },\n            \n        }\n\n       \n    }\n",{"version":3,"sources":["CreateProjectInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA","file":"CreateProjectInfo.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n<section>\n<Menu/>\n    <div id=\"create-project\">\n        <h1>Create Project Info</h1>\n\n        <p><router-link v-if=\"isAuthenticated\" class=\"btn btn-primary\" to=\"/projectsinfo\">Back to Projects Info</router-link>\n\n        <notification v-bind:notifications=\"notifications\"></notification>\n\n        <form v-on:submit.prevent=\"addProjectInfo\" enctype=\"multipart/form-data\">\n\n            \n             <div class=\"form-group\">\n                <label name=\"project_description\">File Upload</label>\n           \n          <picture-input\n  ref=\"pictureInput\"\n  @change=\"onSelect\"\n  @remove=\"onRemoved\"\n  :width=\"200\"\n  :removable=\"true\"\n  removeButtonClass=\"ui red button\"\n  :height=\"200\"\n  multiple\n  accept=\"image/jpeg, image/png, image/gif\"\n  buttonClass=\"ui button primary\"\n  :customStrings=\"{\n  upload: '<h1>Upload it!</h1>',\n  drag: 'Drag and drop your image here'}\">\n\n</picture-input>\n\n            </div>\n \n             <div class=\"form-group\">\n                <label name=\"project_description\">Image Description</label>\n                <input type=\"text\" class=\"form-control\" v-model=\"projectinfo.description\" id=\"project_description\" required>\n            </div>\n\n\n              <div class=\"form-group\">\n                <label name=\"project_name\">Project Name</label>\n                \n            <select  v-model=\"projectinfo.project\" id=\"projectNameList\" class=\"form-control\" required>\n        <option v-for=\"(project, index) in projects\" :key=\"index\" v-bind:value=\"project.id\">\n            {{project.name}}\n        </option>\n    </select>  \n            </div>\n\n              <div class=\"form-group\">\n                <label name=\"project_industry\">Industry</label>\n                \n            <select  v-model=\"projectinfo.industry\" id=\"industryList\" class=\"form-control\" required>\n        <option v-for=\"(industry, index) in industries\" :key=\"index\" v-bind:value=\"industry.key\">\n            {{industry.value}}\n        </option>\n    </select>  \n            </div>\n\n             <div class=\"form-group\">\n                <label name=\"project_type\">Type</label>\n                \n            <select  v-model=\"projectinfo.type\" id=\"typeList\" class=\"form-control\" required>\n        <option v-for=\"(type, index) in types\" :key=\"index\" v-bind:value=\"type.key\">\n            {{type.value}}\n        </option>\n    </select>  \n            </div>\n\n <div class=\"form-group\">\n                <label name=\"project_work\">Work Type</label>\n                \n            <select  v-model=\"projectinfo.work\" id=\"workList\" class=\"form-control\" required>\n        <option v-for=\"(work, index) in works\" :key=\"index\" v-bind:value=\"work.key\">\n            {{work.value}}\n        </option>\n    </select>  \n            </div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-primary\">Create</button>\n            </div>\n        </form>\n    </div>\n          </section>\n</template>\n\n<script>\n    import Menu from \"./Menu\";\nimport ProjectInfoDataService from \"../service/ProjectInfoDataService\";\nimport ProjectDataService from \"../service/ProjectDataService\";\n\nimport AuthenticationService from \"../service/AuthenticationService\";\nimport Notification from './notifications.vue';\nimport PictureInput from 'vue-picture-input'\n    export default{\n         name: \"create-project-info\",\n         \n  components: {\n    Menu,\n    'notification' : Notification,\n    PictureInput\n\n  },\n        data(){\n            return{\n                projectinfo:{},\n                notifications:[],\n                isAuthenticated: AuthenticationService.isUserLoggedIn(),\n\n                industries: this.retrieveLookupData(),\n                types: this.retrieveLookupData(),\n                works: this.retrieveLookupData(),\n                file:\"\",\n                projects: this.retrieveProjects(),\n            }\n        },\n\n        methods: {\nonSelect(){\nconst file=this.$refs.pictureInput.file;\n\nthis.file=file;\n},\nonRemoved() {\n    this.image = '';\n  },\nretrieveProjects() {\n      ProjectDataService.getAll()\n        .then(response => {\n          this.projects = response.data;\n          console.log(\"projects===>\"+this.projects);\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n\nretrieveLookupData() {\n      ProjectInfoDataService.getLookupData()\n        .then(response => {\n          this.industries = response.data.industryLookupData;\n          this.works = response.data.workLookupData;\n          this.types = response.data.typeLookupData;\n\n          console.log(\"industry===>\"+this.industries);\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n            addProjectInfo: function()\n            {\n                let formData = new FormData();\n\n            /*\n                Add the form data we need to submit\n            */\n            formData.append('file', this.file);\n            formData.append('projectinfo', this.projectinfo);\n\n                \n\n      ProjectInfoDataService.create(this.file, this.projectinfo)\n        .then(response => {\n         this.notifications.push({\n                        type: 'success',\n                        message: 'Project Info created successfully'\n                    });\n        }, (response) => {\n                    this.notifications.push({\n                        type: 'error',\n                        message: 'Project Info not created'\n                    });\n                })\n        .catch(e => {\n          console.log(e);\n        });\n\n    },\n            \n        }\n\n       \n    }\n</script>\n"]}]}