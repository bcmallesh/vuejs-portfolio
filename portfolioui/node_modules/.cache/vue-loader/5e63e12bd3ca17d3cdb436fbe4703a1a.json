{"remainingRequest":"D:\\vuejs\\workspace\\05062020\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vuejs\\workspace\\05062020\\src\\components\\DeleteProject.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vuejs\\workspace\\05062020\\src\\components\\DeleteProject.vue","mtime":1591278678484},{"path":"D:\\vuejs\\workspace\\05062020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591278153457},{"path":"D:\\vuejs\\workspace\\05062020\\node_modules\\babel-loader\\lib\\index.js","mtime":1591278138251},{"path":"D:\\vuejs\\workspace\\05062020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591278153457},{"path":"D:\\vuejs\\workspace\\05062020\\node_modules\\vue-loader\\lib\\index.js","mtime":1591278648347}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Menu from \"./Menu\";\nimport ProjectDataService from \"../service/ProjectDataService\";\nimport AuthenticationService from \"../service/AuthenticationService\";\nimport Notification from './notifications.vue';\n\n    export default{\n         name: \"delete-project\",\n  components: {\n    Menu,\n    'notification' : Notification\n  },\n        data(){\n            return{\n                project:{},\n                notifications:[],\n            isAuthenticated: AuthenticationService.isUserLoggedIn()\n\n            }\n        },\n\n        created: function(){\n            this.getProject();\n        },\n\n       methods: {\n\ngetProject: function()\n            {\n      ProjectDataService.get(this.$route.params.id)\n        .then(response => {\n          this.project = response.data;\n          console.log(response.data);\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n           \n\n           \ndeleteProject: function()\n            {\n      ProjectDataService.delete(this.project.id)\n        .then(response => {\n         this.notifications.push({\n                        type: 'success',\n                        message: 'Project deleted successfully'\n                    });\n        }, (response) => {\n                    this.notifications.push({\n                        type: 'error',\n                        message: 'Project not deleted'\n                    });\n                })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n\n            \n        },\n\n        \n    }\n",{"version":3,"sources":["DeleteProject.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA","file":"DeleteProject.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<section>\n<Menu/>\n    <div id=\"delete-project\">\n        <h1>Delete Project {{ project.name }}</h1>\n\n        <p><router-link v-if=\"isAuthenticated\" class=\"btn btn-primary\" to=\"/projects\">Back to Projects</router-link>\n\n        <notification v-bind:notifications=\"notifications\"></notification>\n\n        <form v-on:submit.prevent=\"deleteProject\">\n            <p><button class=\"btn btn-danger\">Delete Project</button></p>\n        </form>\n    </div>\n      </section>\n</template>\n\n<script>\nimport Menu from \"./Menu\";\nimport ProjectDataService from \"../service/ProjectDataService\";\nimport AuthenticationService from \"../service/AuthenticationService\";\nimport Notification from './notifications.vue';\n\n    export default{\n         name: \"delete-project\",\n  components: {\n    Menu,\n    'notification' : Notification\n  },\n        data(){\n            return{\n                project:{},\n                notifications:[],\n            isAuthenticated: AuthenticationService.isUserLoggedIn()\n\n            }\n        },\n\n        created: function(){\n            this.getProject();\n        },\n\n       methods: {\n\ngetProject: function()\n            {\n      ProjectDataService.get(this.$route.params.id)\n        .then(response => {\n          this.project = response.data;\n          console.log(response.data);\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n           \n\n           \ndeleteProject: function()\n            {\n      ProjectDataService.delete(this.project.id)\n        .then(response => {\n         this.notifications.push({\n                        type: 'success',\n                        message: 'Project deleted successfully'\n                    });\n        }, (response) => {\n                    this.notifications.push({\n                        type: 'error',\n                        message: 'Project not deleted'\n                    });\n                })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n\n            \n        },\n\n        \n    }\n</script>\n\n"]}]}